@page "/register"
@using Todo.Ui.Apps.Dtos
@rendermode InteractiveServer

<div class="login-container">
    <div class="login-form">
        <EditForm Model="@registrationModel" OnValidSubmit="HandleRegister" FormName="RegisterForm">
            <h3 style="text-align: center;">Register</h3>
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="input-field">
                <label>
                    <i class="fas fa-user"></i>
                    <InputText @bind-Value="@registrationModel.UserId" placeholder="User Id" class="form-control" />
                </label>
                <ValidationMessage For="@(() => registrationModel.UserId)" />
            </div>
            <div class="input-field">
                <label>
                    <i class="fas fa-lock"></i>
                    <InputText @bind-Value="@registrationModel.Password" type="password" placeholder="Password" class="form-control" />
                </label>
                <ValidationMessage For="@(() => registrationModel.Password)" />
            </div>
            <div class="input-field">
                <label>
                    <i class="fas fa-user-tag"></i>
                    <InputText @bind-Value="@registrationModel.Name" placeholder="Name" class="form-control" />
                </label>
                <ValidationMessage For="@(() => registrationModel.Name)" />
            </div>
            <button type="submit" class="btn-submit">REGISTER</button>

            <div class="login-link">
                <p>Already have an account? <NavLink href="/">Login</NavLink></p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Inject]
    public HttpClient Http { get; set; }

    [Inject]
    public NavigationManager Navigation { get; set; }

    [Inject]
    public UserService UserService { get; set; }

    private UserRegistrationDto registrationModel = new UserRegistrationDto();
    private string registrationError;

    private async Task HandleRegister()
    {
        HttpResponseMessage response = await UserService.RegisterAsync(registrationModel);

        if (response != null && response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            registrationError = "Registration failed, please try again.";
        }
    }

}
